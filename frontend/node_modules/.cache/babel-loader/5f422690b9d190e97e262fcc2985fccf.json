{"ast":null,"code":"var _jsxFileName = \"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/components/ScrollableChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport { isLastMessage, isSameSender, isSameSenderMargin, isSameUser } from \"../config/ChatLogics\";\nimport ChatContext from \"../Context/chat-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollableChat = _ref => {\n  _s();\n\n  let {\n    messages\n  } = _ref;\n  const {\n    user\n  } = useContext(ChatContext);\n  return /*#__PURE__*/_jsxDEV(ScrollableFeed, {\n    children: messages && messages.map((message, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\"\n      },\n      children: [(isSameSender(messages, message, i, user._id) || isLastMessage(messages, i, user._id)) && /*#__PURE__*/_jsxDEV(Tooltip, {\n        label: message.sender.name,\n        placement: \"bottom-start\",\n        hasArrow: true,\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          mt: \"7px\",\n          mr: 1,\n          size: \"sm\",\n          cursor: \"pointer\",\n          name: message.sender.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        style: {\n          backgroundColor: `${message.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"}`,\n          marginLeft: isSameSenderMargin(messages, message, i, user._id),\n          marginTop: isSameUser(messages, message, i, user._id) ? 3 : 10,\n          borderRadius: \"20px\",\n          padding: \"5px 15px\",\n          maxWidth: \"75%\"\n        },\n        children: message.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)]\n    }, message._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScrollableChat, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n\n_c = ScrollableChat;\nexport default ScrollableChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollableChat\");","map":{"version":3,"sources":["/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/components/ScrollableChat.js"],"names":["React","useContext","Avatar","Tooltip","ScrollableFeed","isLastMessage","isSameSender","isSameSenderMargin","isSameUser","ChatContext","ScrollableChat","messages","user","map","message","i","display","_id","sender","name","backgroundColor","marginLeft","marginTop","borderRadius","padding","maxWidth","content"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,SAASC,OAAT,QAAwB,oBAAxB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SACEC,aADF,EAEEC,YAFF,EAGEC,kBAHF,EAIEC,UAJF,QAKO,sBALP;AAMA,OAAOC,WAAP,MAAwB,yBAAxB;;;AAEA,MAAMC,cAAc,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAEvC,QAAM;AAAEC,IAAAA;AAAF,MAAYX,UAAU,CAACQ,WAAD,CAA5B;AAEA,sBACE,QAAC,cAAD;AAAA,cACGE,QAAQ,IACPA,QAAQ,CAACE,GAAT,CAAa,CAACC,OAAD,EAAUC,CAAV,kBACX;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAZ;AAAA,iBACG,CAACV,YAAY,CAACK,QAAD,EAAWG,OAAX,EAAoBC,CAApB,EAAuBH,IAAI,CAACK,GAA5B,CAAZ,IACAZ,aAAa,CAACM,QAAD,EAAWI,CAAX,EAAcH,IAAI,CAACK,GAAnB,CADd,kBAEC,QAAC,OAAD;AAAS,QAAA,KAAK,EAAEH,OAAO,CAACI,MAAR,CAAeC,IAA/B;AAAqC,QAAA,SAAS,EAAC,cAA/C;AAA8D,QAAA,QAAQ,MAAtE;AAAA,+BACE,QAAC,MAAD;AACE,UAAA,EAAE,EAAC,KADL;AAEE,UAAA,EAAE,EAAE,CAFN;AAGE,UAAA,IAAI,EAAC,IAHP;AAIE,UAAA,MAAM,EAAC,SAJT;AAKE,UAAA,IAAI,EAAEL,OAAO,CAACI,MAAR,CAAeC;AALvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAHJ,eAaE;AACE,QAAA,KAAK,EAAE;AACLC,UAAAA,eAAe,EAAG,GAChBN,OAAO,CAACI,MAAR,CAAeD,GAAf,KAAuBL,IAAI,CAACK,GAA5B,GAAkC,SAAlC,GAA8C,SAC/C,EAHI;AAILI,UAAAA,UAAU,EAAEd,kBAAkB,CAACI,QAAD,EAAWG,OAAX,EAAoBC,CAApB,EAAuBH,IAAI,CAACK,GAA5B,CAJzB;AAKLK,UAAAA,SAAS,EAAEd,UAAU,CAACG,QAAD,EAAWG,OAAX,EAAoBC,CAApB,EAAuBH,IAAI,CAACK,GAA5B,CAAV,GAA6C,CAA7C,GAAiD,EALvD;AAMLM,UAAAA,YAAY,EAAE,MANT;AAOLC,UAAAA,OAAO,EAAE,UAPJ;AAQLC,UAAAA,QAAQ,EAAE;AARL,SADT;AAAA,kBAYGX,OAAO,CAACY;AAZX;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA,OAAsCZ,OAAO,CAACG,GAA9C;AAAA;AAAA;AAAA;AAAA,YADF;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD,CAvCD;;GAAMP,c;;KAAAA,c;AAyCN,eAAeA,cAAf","sourcesContent":["import React, {useContext} from 'react';\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport ChatContext from \"../Context/chat-context\";\n\nconst ScrollableChat = ({ messages }) => {\n\n  const { user } =  useContext(ChatContext);\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((message, i) => (\n          <div style={{ display: \"flex\" }} key={message._id}>\n            {(isSameSender(messages, message, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={message.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={message.sender.name}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  message.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, message, i, user._id),\n                marginTop: isSameUser(messages, message, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {message.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;"]},"metadata":{},"sourceType":"module"}
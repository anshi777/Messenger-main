{"ast":null,"code":"import _toConsumableArray from\"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/node_modules/@babel/runtime/regenerator/index.js\";import{FormControl}from\"@chakra-ui/form-control\";import{Input}from\"@chakra-ui/input\";import{Box,Text}from\"@chakra-ui/layout\";import\"./styles.css\";import{IconButton,Spinner,useToast}from\"@chakra-ui/react\";import{getSender,getSenderFull}from\"../config/ChatLogics\";//import { useHelper } from '../config/helper-hook';\nimport{useContext,useEffect,useState}from\"react\";import axios from\"axios\";import{ArrowBackIcon}from\"@chakra-ui/icons\";import ProfileModal from\"./miscellaneous/ProfileModal\";import ScrollableChat from\"./ScrollableChat\";import UpdateGroupChatModal from\"./miscellaneous/UpdateGroupChatModal\";import ChatContext from\"../Context/chat-context\";import Lottie from\"react-lottie\";import animationData from\"../animations/typing.json\";import io from\"socket.io-client\";//const ENDPOINT = \"http://localhost:5000\"; //development\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ENDPOINT=\"https://textalot.herokuapp.com\";//for deployment -production\nvar socket,selectedChatCompare;var SingleChat=function SingleChat(_ref){var fetchAgain=_ref.fetchAgain,setFetchAgain=_ref.setFetchAgain;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(\"\"),_useState6=_slicedToArray(_useState5,2),newMessage=_useState6[0],setNewMessage=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),socketConnected=_useState8[0],setSocketConnected=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),typing=_useState10[0],setTyping=_useState10[1];var _useState11=useState(false),_useState12=_slicedToArray(_useState11,2),istyping=_useState12[0],setIsTyping=_useState12[1];var toast=useToast();var _useContext=useContext(ChatContext),selectedChat=_useContext.selectedChat,setSelectedChat=_useContext.setSelectedChat,user=_useContext.user,notification=_useContext.notification,setNotification=_useContext.setNotification;//console.log(selectedChat, \"selectedChat in chatBox\");\nvar defaultOptions={loop:true,autoplay:true,animationData:animationData,rendererSettings:{preserveAspectRatio:\"xMidYMid slice\"}};var fetchMessages=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var config,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(selectedChat){_context.next=2;break;}return _context.abrupt(\"return\");case 2:_context.prev=2;config={headers:{Authorization:\"Bearer \".concat(user.token)}};setLoading(true);_context.next=7;return axios.get(\"/api/message/\".concat(selectedChat._id),config);case 7:_yield$axios$get=_context.sent;data=_yield$axios$get.data;setMessages(data);setLoading(false);console.log(data,\"fetched messsages of the selected chat data\");socket.emit(\"join chat\",selectedChat._id);_context.next=19;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](2);console.log(_context.t0.message);toast({title:\"Error Occured!\",description:\"Failed to Load the Messages\",status:\"error\",duration:3000,isClosable:true,position:\"bottom\"});case 19:case\"end\":return _context.stop();}}},_callee,null,[[2,15]]);}));return function fetchMessages(){return _ref2.apply(this,arguments);};}();var sendMessage=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(event){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!(event.key===\"Enter\"&&newMessage)){_context2.next=18;break;}socket.emit(\"stop typing\",selectedChat._id);_context2.prev=2;config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};//async func -- wont make newMessage empty instantaneously\n//ui enhancement -- input to be empty as soon as we hit ender/send\nsetNewMessage(\"\");_context2.next=7;return axios.post(\"/api/message\",{content:newMessage,chatId:selectedChat},config);case 7:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;//setNewMessage(\"\");\nsocket.emit(\"new message\",data);setMessages([].concat(_toConsumableArray(messages),[data]));console.log(data,\"sent message response data\");_context2.next=18;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](2);console.log(_context2.t0.message);toast({title:\"Error Occured!\",description:\"Failed to send the Message\",status:\"error\",duration:3000,isClosable:true,position:\"bottom\"});case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[2,14]]);}));return function sendMessage(_x){return _ref3.apply(this,arguments);};}();useEffect(function(){socket=io(ENDPOINT);socket.emit(\"setup\",user);socket.on(\"connected\",function(){return setSocketConnected(true);});socket.on(\"typing\",function(){return setIsTyping(true);});socket.on(\"stop typing\",function(){return setIsTyping(false);});// eslint-disable-next-line\n},[]);useEffect(function(){fetchMessages();//whwnever selctedChat changes, fetchAllMessages again for new selectedChat._id\n//just to keep a track\nselectedChatCompare=selectedChat;// eslint-disable-next-line\n},[selectedChat]);//console.log(notification, 'notification Bellicon');\nuseEffect(function(){socket.on(\"message recieved\",function(newMessageRecieved){if(!selectedChatCompare||selectedChatCompare._id!==newMessageRecieved.chat._id){// if chat is not selected or doesn't match current chat\nif(!notification.includes(newMessageRecieved)){setNotification([newMessageRecieved].concat(_toConsumableArray(notification)));setFetchAgain(!fetchAgain);//updating our chats in our my chats on newMessageRecieved\nconsole.log(notification,\"notification bell-icon check\");}}else{setMessages([].concat(_toConsumableArray(messages),[newMessageRecieved]));}});});var typingHandler=function typingHandler(e){setNewMessage(e.target.value);//typing animation code\nif(!socketConnected)return;if(!typing){setTyping(true);socket.emit(\"typing\",selectedChat._id);}//debounce/throttle function\nvar lastTypingTime=new Date().getTime();var timerLength=3000;setTimeout(function(){var timeNow=new Date().getTime();var timeDiff=timeNow-lastTypingTime;if(timeDiff>=timerLength&&typing){socket.emit(\"stop typing\",selectedChat._id);setTyping(false);}},timerLength);};return/*#__PURE__*/_jsx(_Fragment,{children:selectedChat?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Text,{fontSize:{base:\"28px\",md:\"30px\"},pb:3,px:2,w:\"100%\",fontFamily:\"Work sans\",d:\"flex\",justifyContent:{base:\"space-between\"},alignItems:\"center\",children:[/*#__PURE__*/_jsx(IconButton,{d:{base:\"flex\",md:\"none\"},icon:/*#__PURE__*/_jsx(ArrowBackIcon,{}),onClick:function onClick(){return setSelectedChat(\"\");}}),messages&&!selectedChat.isGroupChat?/*#__PURE__*/_jsxs(_Fragment,{children:[getSender(user,selectedChat.users),/*#__PURE__*/_jsx(ProfileModal,{user:getSenderFull(user,selectedChat.users)})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[selectedChat.chatName.toUpperCase(),/*#__PURE__*/_jsx(UpdateGroupChatModal,{fetchAgain:fetchAgain,setFetchAgain:setFetchAgain,fetchMessages:fetchMessages})]})]}),/*#__PURE__*/_jsxs(Box,{d:\"flex\",flexDir:\"column\",justifyContent:\"flex-end\",p:3,bg:\"#E8E8E8\",w:\"100%\",h:\"100%\",borderRadius:\"lg\",overflowY:\"hidden\",children:[loading?/*#__PURE__*/_jsx(Spinner,{size:\"xl\",w:20,h:20,alignSelf:\"center\",margin:\"auto\"}):/*#__PURE__*/_jsx(\"div\",{className:\"messages\",children:/*#__PURE__*/_jsx(ScrollableChat,{messages:messages})}),/*#__PURE__*/_jsxs(FormControl,{onKeyDown:sendMessage,id:\"first-name\",isRequired:true,mt:3,children:[istyping?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Lottie,{options:defaultOptions,height:40,width:50,style:{marginBottom:15,marginLeft:0}})}):/*#__PURE__*/_jsx(_Fragment,{}),/*#__PURE__*/_jsx(Input,{variant:\"filled\",bg:\"#E0E0E0\",placeholder:\"Enter a message..\",value:newMessage,onChange:typingHandler})]})]})]}):/*#__PURE__*/_jsx(Box,{d:\"flex\",alignItems:\"center\",justifyContent:\"center\",h:\"100%\",children:/*#__PURE__*/_jsx(Text,{fontSize:\"3xl\",pb:3,fontFamily:\"Work sans\",children:\"Click on a user to start chatting\"})})});};export default SingleChat;","map":{"version":3,"sources":["/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/components/SingleChat.js"],"names":["FormControl","Input","Box","Text","IconButton","Spinner","useToast","getSender","getSenderFull","useContext","useEffect","useState","axios","ArrowBackIcon","ProfileModal","ScrollableChat","UpdateGroupChatModal","ChatContext","Lottie","animationData","io","ENDPOINT","socket","selectedChatCompare","SingleChat","fetchAgain","setFetchAgain","messages","setMessages","loading","setLoading","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","toast","selectedChat","setSelectedChat","user","notification","setNotification","defaultOptions","loop","autoplay","rendererSettings","preserveAspectRatio","fetchMessages","config","headers","Authorization","token","get","_id","data","console","log","emit","message","title","description","status","duration","isClosable","position","sendMessage","event","key","post","content","chatId","on","newMessageRecieved","chat","includes","typingHandler","e","target","value","lastTypingTime","Date","getTime","timerLength","setTimeout","timeNow","timeDiff","base","md","isGroupChat","users","chatName","toUpperCase","marginBottom","marginLeft"],"mappings":"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","sourcesContent":["import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\n//import { useHelper } from '../config/helper-hook';\nimport { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport ChatContext from \"../Context/chat-context\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\n\n//const ENDPOINT = \"http://localhost:5000\"; //development\nconst ENDPOINT = \"https://textalot.herokuapp.com\"; //for deployment -production\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user, notification, setNotification } = useContext(ChatContext);\n  //console.log(selectedChat, \"selectedChat in chatBox\");\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: { Authorization: `Bearer ${user.token}` },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n\n      setMessages(data);\n      setLoading(false);\n      console.log(data, \"fetched messsages of the selected chat data\");\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      console.log(error.message);\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n\n      socket.emit(\"stop typing\", selectedChat._id);\n\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n\n        //async func -- wont make newMessage empty instantaneously\n        //ui enhancement -- input to be empty as soon as we hit ender/send\n        setNewMessage(\"\");\n\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n\n        //setNewMessage(\"\");\n        socket.emit(\"new message\", data);\n\n        setMessages([...messages, data]);\n        console.log(data, \"sent message response data\");\n      } catch (error) {\n        console.log(error.message);\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 3000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n    //whwnever selctedChat changes, fetchAllMessages again for new selectedChat._id\n\n    //just to keep a track\n    selectedChatCompare = selectedChat;\n\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  //console.log(notification, 'notification Bellicon');\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if ( !selectedChatCompare || selectedChatCompare._id !== newMessageRecieved.chat._id) {\n\n        // if chat is not selected or doesn't match current chat\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain); //updating our chats in our my chats on newMessageRecieved\n          console.log(notification, \"notification bell-icon check\");\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    //typing animation code\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n\n    //debounce/throttle function\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages && !selectedChat.isGroupChat ? (\n              <>\n                {getSender(user, selectedChat.users)}\n                <ProfileModal user={getSenderFull(user, selectedChat.users)} />\n              </>\n            ) : (\n              <>\n                {selectedChat.chatName.toUpperCase()}\n                <UpdateGroupChatModal\n                  fetchAgain={fetchAgain}\n                  setFetchAgain={setFetchAgain}\n                  fetchMessages={fetchMessages}\n                />\n              </>\n            )}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    height={40}\n                    width={50}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n"]},"metadata":{},"sourceType":"module"}
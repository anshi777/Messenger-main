{"ast":null,"code":"var _jsxFileName = \"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/Context/ChatProvider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ChatContext from \"./chat-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatProvider = props => {\n  _s();\n\n  const [user, setUser] = useState();\n  const [selectedChat, setSelectedChat] = useState();\n  const [chats, setChats] = useState([]);\n  const [notification, setNotification] = useState([]);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userInformation = JSON.parse(localStorage.getItem(\"userInformation\"));\n    setUser(userInformation);\n    if (!userInformation) navigate(\"/\"); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navigate]); //console.log(chats, 'chats context')\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ChatContext.Provider, {\n      value: {\n        user,\n        setUser,\n        selectedChat,\n        setSelectedChat,\n        chats,\n        setChats,\n        notification,\n        setNotification\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChatProvider, \"7Tbqk6QMOg5mSWdcO59P8aSQNZc=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ChatProvider;\nexport default ChatProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatProvider\");","map":{"version":3,"sources":["/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/Context/ChatProvider.js"],"names":["React","useState","useEffect","useNavigate","ChatContext","ChatProvider","props","user","setUser","selectedChat","setSelectedChat","chats","setChats","notification","setNotification","navigate","userInformation","JSON","parse","localStorage","getItem","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;AACA,QAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCT,QAAQ,EAAhD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACY,YAAD,EAAeC,eAAf,IAAkCb,QAAQ,CAAC,EAAD,CAAhD;AAEA,QAAMc,QAAQ,GAAGZ,WAAW,EAA5B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,eAAe,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAAxB;AACAZ,IAAAA,OAAO,CAACQ,eAAD,CAAP;AAEA,QAAI,CAACA,eAAL,EAAsBD,QAAQ,CAAC,GAAD,CAAR,CAJR,CAKd;AACD,GANQ,EAMN,CAACA,QAAD,CANM,CAAT,CAR8B,CAgB9B;;AACA,sBACE;AAAA,2BACE,QAAC,WAAD,CAAa,QAAb;AACE,MAAA,KAAK,EAAE;AACLR,QAAAA,IADK;AAELC,QAAAA,OAFK;AAGLC,QAAAA,YAHK;AAILC,QAAAA,eAJK;AAKLC,QAAAA,KALK;AAMLC,QAAAA,QANK;AAOLC,QAAAA,YAPK;AAQLC,QAAAA;AARK,OADT;AAAA,gBAYGR,KAAK,CAACe;AAZT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CAnCD;;GAAMhB,Y;UAMaF,W;;;KANbE,Y;AAqCN,eAAeA,YAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ChatContext from \"./chat-context\";\n\nconst ChatProvider = (props) => {\n  const [user, setUser] = useState();\n  const [selectedChat, setSelectedChat] = useState();\n  const [chats, setChats] = useState([]);\n  const [notification, setNotification] = useState([]);\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const userInformation = JSON.parse(localStorage.getItem(\"userInformation\"));\n    setUser(userInformation);\n\n    if (!userInformation) navigate(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [navigate]);\n\n  //console.log(chats, 'chats context')\n  return (\n    <div>\n      <ChatContext.Provider\n        value={{\n          user,\n          setUser,\n          selectedChat,\n          setSelectedChat,\n          chats,\n          setChats,\n          notification,\n          setNotification,\n        }}\n      >\n        {props.children}\n      </ChatContext.Provider>\n    </div>\n  );\n};\n\nexport default ChatProvider;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/components/Authentication/Signup.js\",\n    _s = $RefreshSig$();\n\nimport { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [show, setShow] = useState(false);\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n  const navigate = useNavigate();\n\n  const handleClick = () => setShow(!show);\n\n  const submitHandler = async () => {\n    setLoading(true);\n\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setLoading(false);\n      return;\n    }\n\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      return;\n    }\n\n    console.log(name, email);\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\"\n        }\n      };\n      const {\n        data\n      } = await axios.post(\"/api/user\", {\n        name,\n        email,\n        password\n      }, config);\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      localStorage.setItem(\"userInformation\", JSON.stringify(data));\n      setLoading(false);\n      navigate(\"/chats\");\n    } catch (error) {\n      console.log(error.message);\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\"\n      });\n      setLoading(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(VStack, {\n    spacing: \"5px\",\n    children: [/*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"first-name\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"Enter Your Name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"email\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Email Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        type: \"email\",\n        placeholder: \"Enter Your Email Address\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"password\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        size: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: show ? \"text\" : \"password\",\n          placeholder: \"Enter Password\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"cyan\",\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: handleClick,\n            children: show ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n      id: \"password\",\n      isRequired: true,\n      children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n        children: \"Confirm Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n        size: \"md\",\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          type: show ? \"text\" : \"password\",\n          placeholder: \"Confirm password\",\n          onChange: e => setConfirmpassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(InputRightElement, {\n          width: \"4.5rem\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"cyan\",\n            h: \"1.75rem\",\n            size: \"sm\",\n            onClick: handleClick,\n            children: show ? \"Hide\" : \"Show\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      fontWeight: \"bold\",\n      colorScheme: \"teal\",\n      width: \"100%\",\n      style: {\n        marginTop: 15,\n        fontWeight: 'bold'\n      },\n      onClick: submitHandler,\n      isLoading: loading,\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"ZLRRvwnQ0pETY7F9LEMHnJzf9vE=\", false, function () {\n  return [useToast, useNavigate];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"sources":["/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/components/Authentication/Signup.js"],"names":["Button","FormControl","FormLabel","Input","InputGroup","InputRightElement","VStack","useState","useToast","axios","useNavigate","Signup","show","setShow","name","setName","email","setEmail","confirmpassword","setConfirmpassword","password","setPassword","loading","setLoading","toast","navigate","handleClick","submitHandler","title","status","duration","isClosable","position","console","log","config","headers","data","post","localStorage","setItem","JSON","stringify","error","message","description","response","e","target","value","marginTop","fontWeight"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\n\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n \n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const toast = useToast();\n  const navigate = useNavigate();\n\n  const handleClick = () => setShow(!show);\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    console.log(name, email);\n\n    try {\n      const config = {\n        headers: { \"Content-type\": \"application/json\" },\n      };\n\n      const { data } = await axios.post( \"/api/user\", { name, email, password}, config );\n      console.log(data);\n\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n\n      localStorage.setItem(\"userInformation\", JSON.stringify(data));\n      setLoading(false);\n      navigate(\"/chats\");\n\n    } catch (error) {\n      console.log(error.message);  \n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n    \n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button colorScheme='cyan' h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button colorScheme='cyan' h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button fontWeight=\"bold\"\n        colorScheme=\"teal\"\n        width=\"100%\"\n        style={{ marginTop: 15, fontWeight: 'bold' }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;"]},"metadata":{},"sourceType":"module"}
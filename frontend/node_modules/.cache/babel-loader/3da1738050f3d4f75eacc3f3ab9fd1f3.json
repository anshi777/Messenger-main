{"ast":null,"code":"import _toConsumableArray from\"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _asyncToGenerator from\"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useContext}from\"react\";import{useNavigate}from\"react-router-dom\";import ChatContext from\"../../Context/chat-context\";import ProfileModal from\"./ProfileModal\";import{useDisclosure}from\"@chakra-ui/hooks\";import{Box,Text}from\"@chakra-ui/layout\";import{Menu,MenuButton,MenuDivider,MenuItem,MenuList}from\"@chakra-ui/menu\";import{Drawer,DrawerBody,DrawerContent,DrawerHeader,DrawerOverlay}from\"@chakra-ui/modal\";import{Button}from\"@chakra-ui/button\";import{Tooltip}from\"@chakra-ui/tooltip\";import{BellIcon,ChevronDownIcon}from\"@chakra-ui/icons\";import{Avatar}from\"@chakra-ui/avatar\";import axios from\"axios\";import{useToast}from\"@chakra-ui/toast\";import{Input,Spinner}from\"@chakra-ui/react\";import ChatLoading from\"../ChatLoading\";import UserListItem from\"../userAvatar/UserListItem\";import NotificationBadge from\"react-notification-badge\";import{Effect}from\"react-notification-badge\";import{getSender}from\"../../config/ChatLogics\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var SideDrawer=function SideDrawer(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),searchResult=_useState4[0],setSearchResult=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),loadingChat=_useState8[0],setLoadingChat=_useState8[1];var _useContext=useContext(ChatContext),user=_useContext.user,setSelectedChat=_useContext.setSelectedChat,chats=_useContext.chats,setChats=_useContext.setChats,notification=_useContext.notification,setNotification=_useContext.setNotification;var navigate=useNavigate();var toast=useToast();var _useDisclosure=useDisclosure(),isOpen=_useDisclosure.isOpen,onOpen=_useDisclosure.onOpen,onClose=_useDisclosure.onClose;var logoutHandler=function logoutHandler(){localStorage.removeItem(\"userInformation\");navigate(\"/\");};var handleSearch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var config,_yield$axios$get,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(search){_context.next=3;break;}toast({title:\"Please Enter something in search\",status:\"warning\",duration:3000,isClosable:true,position:\"top-left\"});return _context.abrupt(\"return\");case 3:_context.prev=3;setLoading(true);config={headers:{Authorization:\"Bearer \".concat(user.token)}};_context.next=8;return axios.get(\"/api/user?search=\".concat(search),config);case 8:_yield$axios$get=_context.sent;data=_yield$axios$get.data;//console.log(data, 'searchQuerry keyword response data');\nsetLoading(false);setSearchResult(data);_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](3);console.log(_context.t0.message);toast({title:\"Error Occured!\",description:\"Failed to Load the Search Results\",status:\"error\",duration:3000,isClosable:true,position:\"bottom-left\"});case 18:case\"end\":return _context.stop();}}},_callee,null,[[3,14]]);}));return function handleSearch(){return _ref.apply(this,arguments);};}();var accessChatCreateChat=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(userId){var config,_yield$axios$post,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;setLoadingChat(true);config={headers:{\"Content-type\":\"application/json\",Authorization:\"Bearer \".concat(user.token)}};_context2.next=5;return axios.post(\"/api/chat\",{userId:userId},config);case 5:_yield$axios$post=_context2.sent;data=_yield$axios$post.data;if(!chats.find(function(chat){return chat._id===data._id;}))setChats([data].concat(_toConsumableArray(chats)));//already existing check clause //newly created chat above the rest\nsetSelectedChat(data);console.log(data,'access new/existing chat response data');setLoadingChat(false);onClose();//drawer close afterwards\n_context2.next=18;break;case 14:_context2.prev=14;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0.message);toast({title:\"Error fetching the chat\",description:_context2.t0.message,status:\"error\",duration:3000,isClosable:true,position:\"bottom-left\"});case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[0,14]]);}));return function accessChatCreateChat(_x){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsxs(Box,{d:\"flex\",justifyContent:\"space-between\",alignItems:\"center\",w:\"100%\",p:\"5px 10px 5px 10px\",borderWidth:\"5px\",borderColor:\"purple.600\",bg:\"yellow.400\",color:\"black\",children:[/*#__PURE__*/_jsx(Tooltip,{label:\"Search Users to chat\",hasArrow:true,placement:\"bottom-end\",children:/*#__PURE__*/_jsxs(Button,{variant:\"ghost\",bg:\"blue.700\",onClick:onOpen,color:\"white\",_hover:{background:\"purple.800\",color:\"yellow.400\"},_active:{background:\"purple.800\",color:\"yellow.400\"},children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-search\"}),/*#__PURE__*/_jsx(Text,{d:{base:\"none\",md:\"flex\"},px:4,fontWeight:\"bold\",children:\"Search User\"})]})}),/*#__PURE__*/_jsx(Text,{fontSize:\"3xl\",fontFamily:\"Work sans bold\",fontWeight:\"bold\",color:\"purple.700\",children:\"Mishra-Messenger\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Menu,{children:[/*#__PURE__*/_jsxs(MenuButton,{p:1,children:[/*#__PURE__*/_jsx(NotificationBadge,{count:notification.length,effect:Effect.SCALE}),/*#__PURE__*/_jsx(BellIcon,{fontSize:\"2xl\",m:1,color:\"blue.700\"})]}),/*#__PURE__*/_jsxs(MenuList,{pl:2,children:[!notification.length&&\"No New Messages\",notification.map(function(notif){return/*#__PURE__*/_jsx(MenuItem,{onClick:function onClick(){setSelectedChat(notif.chat);setNotification(notification.filter(function(n){return n!==notif;}));},children:notif.chat.isGroupChat?\"New Message in \".concat(notif.chat.chatName):\"New Message from \".concat(getSender(user,notif.chat.users))},notif._id);})]})]}),/*#__PURE__*/_jsxs(Menu,{children:[/*#__PURE__*/_jsx(MenuButton,{as:Button,bg:\"blue.700\",rightIcon:/*#__PURE__*/_jsx(ChevronDownIcon,{}),_hover:{background:\"purple.800\",color:\"yellow.400\"},_active:{background:\"purple.800\",color:\"yellow.400\"},children:/*#__PURE__*/_jsx(Avatar,{size:\"sm\",cursor:\"pointer\",name:user.name,borderColor:\"black\",borderWidth:\"2px\",bg:\"yellow.400\",color:\"black\"})}),/*#__PURE__*/_jsxs(MenuList,{bg:\"purple.600\",borderColor:\"black\",borderWidth:\"2px\",children:[/*#__PURE__*/_jsxs(ProfileModal,{user:user,children:[/*#__PURE__*/_jsx(MenuItem,{fontWeight:\"bold\",color:\"black\",_hover:{background:\"yellow.400\"},children:\"My Profile\"}),\" \"]}),/*#__PURE__*/_jsx(MenuDivider,{}),/*#__PURE__*/_jsx(MenuItem,{fontWeight:\"bold\",color:\"black\",onClick:logoutHandler,_hover:{background:\"yellow.400\"},children:\"Logout\"})]})]})]})]}),/*#__PURE__*/_jsxs(Drawer,{placement:\"left\",onClose:onClose,isOpen:isOpen,children:[/*#__PURE__*/_jsx(DrawerOverlay,{}),/*#__PURE__*/_jsxs(DrawerContent,{children:[/*#__PURE__*/_jsx(DrawerHeader,{borderBottomWidth:\"1px\",children:\"Search Users\"}),/*#__PURE__*/_jsxs(DrawerBody,{children:[/*#__PURE__*/_jsxs(Box,{d:\"flex\",pb:2,children:[/*#__PURE__*/_jsx(Input,{placeholder:\"Search by name or email\",mr:2,value:search,onChange:function onChange(e){return setSearch(e.target.value);}}),/*#__PURE__*/_jsx(Button,{onClick:handleSearch,children:\"Go\"})]}),loading?/*#__PURE__*/_jsx(ChatLoading,{}):searchResult===null||searchResult===void 0?void 0:searchResult.map(function(user){return/*#__PURE__*/ (//user clicked on for chat\n_jsx(UserListItem,{user:user,handleFunction:function handleFunction(){return accessChatCreateChat(user._id);}},user._id));}),loadingChat&&/*#__PURE__*/_jsx(Spinner,{ml:\"auto\",d:\"flex\"})]})]})]})]});};export default SideDrawer;","map":{"version":3,"sources":["/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/components/miscellaneous/SideDrawer.js"],"names":["React","useState","useContext","useNavigate","ChatContext","ProfileModal","useDisclosure","Box","Text","Menu","MenuButton","MenuDivider","MenuItem","MenuList","Drawer","DrawerBody","DrawerContent","DrawerHeader","DrawerOverlay","Button","Tooltip","BellIcon","ChevronDownIcon","Avatar","axios","useToast","Input","Spinner","ChatLoading","UserListItem","NotificationBadge","Effect","getSender","SideDrawer","search","setSearch","searchResult","setSearchResult","loading","setLoading","loadingChat","setLoadingChat","user","setSelectedChat","chats","setChats","notification","setNotification","navigate","toast","isOpen","onOpen","onClose","logoutHandler","localStorage","removeItem","handleSearch","title","status","duration","isClosable","position","config","headers","Authorization","token","get","data","console","log","message","description","accessChatCreateChat","userId","post","find","chat","_id","background","color","base","md","length","SCALE","map","notif","filter","n","isGroupChat","chatName","users","name","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ChatContext from \"../../Context/chat-context\";\nimport ProfileModal from \"./ProfileModal\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport { Input, Spinner } from \"@chakra-ui/react\";\nimport ChatLoading from \"../ChatLoading\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\n\n\nconst SideDrawer = () => {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const { user, setSelectedChat, chats, setChats, notification, setNotification } = useContext(ChatContext);\n\n  const navigate = useNavigate();\n  const toast = useToast();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInformation\");\n    navigate(\"/\");\n  };\n\n  const handleSearch = async() => {\n\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 3000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: { Authorization: `Bearer ${user.token}`}\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      //console.log(data, 'searchQuerry keyword response data');\n\n      setLoading(false);\n      setSearchResult(data);\n\n    } catch (error) {\n\n      console.log(error.message);\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n\n  \n\n  const accessChatCreateChat = async (userId) => {\n    //console.log(userId); id of selected user\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((chat) => chat._id === data._id)) setChats([data, ...chats]); \n      //already existing check clause //newly created chat above the rest\n\n      setSelectedChat(data);\n\n      console.log(data, 'access new/existing chat response data');\n\n      setLoadingChat(false);\n      onClose(); //drawer close afterwards\n    } catch (error) {\n\n      console.log(error.message);\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n        borderColor=\"purple.600\"\n        bg=\"yellow.400\"\n        color=\"black\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" bg ='blue.700' onClick={onOpen} color=\"white\"\n            _hover={{ background: \"purple.800\", color:\"yellow.400\" }} _active={{ background: \"purple.800\", color:\"yellow.400\" }}>\n              <i className=\"fas fa-search\"></i>\n              <Text d={{ base: \"none\", md: \"flex\" }} px={4} fontWeight=\"bold\">\n                Search User\n              </Text>\n          </Button>\n        </Tooltip>\n\n        <Text fontSize=\"3xl\" fontFamily=\"Work sans bold\" fontWeight='bold' color=\"purple.700\" >\n          Mishra-Messenger\n        </Text>\n\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} color=\"blue.700\"/>\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"blue.700\"  rightIcon={<ChevronDownIcon/>}  \n              _hover={{background: \"purple.800\", color:\"yellow.400\"}} _active={{background: \"purple.800\", color:\"yellow.400\"}}>\n              <Avatar size=\"sm\" cursor=\"pointer\" name={user.name} borderColor=\"black\" borderWidth=\"2px\" bg=\"yellow.400\" color=\"black\"/>\n            </MenuButton>\n            <MenuList bg = \"purple.600\" borderColor=\"black\" borderWidth=\"2px\">\n              <ProfileModal user={user}>\n                <MenuItem fontWeight=\"bold\" color=\"black\" _hover={{background: \"yellow.400\"}}  >\n                  My Profile\n                </MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider/>\n              <MenuItem fontWeight=\"bold\" color=\"black\" onClick={logoutHandler} _hover={{background: \"yellow.400\"}}>\n                Logout\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => ( //user clicked on for chat\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChatCreateChat(user._id)}\n                />\n              ))\n            )} \n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default SideDrawer;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/components/miscellaneous/SideDrawer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ChatContext from \"../../Context/chat-context\";\nimport ProfileModal from \"./ProfileModal\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport { Menu, MenuButton, MenuDivider, MenuItem, MenuList } from \"@chakra-ui/menu\";\nimport { Drawer, DrawerBody, DrawerContent, DrawerHeader, DrawerOverlay } from \"@chakra-ui/modal\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport { Input, Spinner } from \"@chakra-ui/react\";\nimport ChatLoading from \"../ChatLoading\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideDrawer = () => {\n  _s();\n\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n  const {\n    user,\n    setSelectedChat,\n    chats,\n    setChats,\n    notification,\n    setNotification\n  } = useContext(ChatContext);\n  const navigate = useNavigate();\n  const toast = useToast();\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInformation\");\n    navigate(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 3000,\n        isClosable: true,\n        position: \"top-left\"\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.get(`/api/user?search=${search}`, config); //console.log(data, 'searchQuerry keyword response data');\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      console.log(error.message);\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  const accessChatCreateChat = async userId => {\n    //console.log(userId); id of selected user\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(`/api/chat`, {\n        userId\n      }, config);\n      if (!chats.find(chat => chat._id === data._id)) setChats([data, ...chats]); //already existing check clause //newly created chat above the rest\n\n      setSelectedChat(data);\n      console.log(data, 'access new/existing chat response data');\n      setLoadingChat(false);\n      onClose(); //drawer close afterwards\n    } catch (error) {\n      console.log(error.message);\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"bottom-left\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      d: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      w: \"100%\",\n      p: \"5px 10px 5px 10px\",\n      borderWidth: \"5px\",\n      borderColor: \"purple.600\",\n      bg: \"yellow.400\",\n      color: \"black\",\n      children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n        label: \"Search Users to chat\",\n        hasArrow: true,\n        placement: \"bottom-end\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"ghost\",\n          bg: \"blue.700\",\n          onClick: onOpen,\n          color: \"white\",\n          _hover: {\n            background: \"purple.800\",\n            color: \"yellow.400\"\n          },\n          _active: {\n            background: \"purple.800\",\n            color: \"yellow.400\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Text, {\n            d: {\n              base: \"none\",\n              md: \"flex\"\n            },\n            px: 4,\n            fontWeight: \"bold\",\n            children: \"Search User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        fontSize: \"3xl\",\n        fontFamily: \"Work sans bold\",\n        fontWeight: \"bold\",\n        color: \"purple.700\",\n        children: \"Mishra-Messenger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Menu, {\n          children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n            p: 1,\n            children: [/*#__PURE__*/_jsxDEV(NotificationBadge, {\n              count: notification.length,\n              effect: Effect.SCALE\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(BellIcon, {\n              fontSize: \"2xl\",\n              m: 1,\n              color: \"blue.700\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n            pl: 2,\n            children: [!notification.length && \"No New Messages\", notification.map(notif => /*#__PURE__*/_jsxDEV(MenuItem, {\n              onClick: () => {\n                setSelectedChat(notif.chat);\n                setNotification(notification.filter(n => n !== notif));\n              },\n              children: notif.chat.isGroupChat ? `New Message in ${notif.chat.chatName}` : `New Message from ${getSender(user, notif.chat.users)}`\n            }, notif._id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Menu, {\n          children: [/*#__PURE__*/_jsxDEV(MenuButton, {\n            as: Button,\n            bg: \"blue.700\",\n            rightIcon: /*#__PURE__*/_jsxDEV(ChevronDownIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 63\n            }, this),\n            _hover: {\n              background: \"purple.800\",\n              color: \"yellow.400\"\n            },\n            _active: {\n              background: \"purple.800\",\n              color: \"yellow.400\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              size: \"sm\",\n              cursor: \"pointer\",\n              name: user.name,\n              borderColor: \"black\",\n              borderWidth: \"2px\",\n              bg: \"yellow.400\",\n              color: \"black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuList, {\n            bg: \"purple.600\",\n            borderColor: \"black\",\n            borderWidth: \"2px\",\n            children: [/*#__PURE__*/_jsxDEV(ProfileModal, {\n              user: user,\n              children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n                fontWeight: \"bold\",\n                color: \"black\",\n                _hover: {\n                  background: \"yellow.400\"\n                },\n                children: \"My Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuDivider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              fontWeight: \"bold\",\n              color: \"black\",\n              onClick: logoutHandler,\n              _hover: {\n                background: \"yellow.400\"\n              },\n              children: \"Logout\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      placement: \"left\",\n      onClose: onClose,\n      isOpen: isOpen,\n      children: [/*#__PURE__*/_jsxDEV(DrawerOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DrawerContent, {\n        children: [/*#__PURE__*/_jsxDEV(DrawerHeader, {\n          borderBottomWidth: \"1px\",\n          children: \"Search Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DrawerBody, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            d: \"flex\",\n            pb: 2,\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              placeholder: \"Search by name or email\",\n              mr: 2,\n              value: search,\n              onChange: e => setSearch(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handleSearch,\n              children: \"Go\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), loading ? /*#__PURE__*/_jsxDEV(ChatLoading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this) : searchResult === null || searchResult === void 0 ? void 0 : searchResult.map(user =>\n          /*#__PURE__*/\n          //user clicked on for chat\n          _jsxDEV(UserListItem, {\n            user: user,\n            handleFunction: () => accessChatCreateChat(user._id)\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }, this)), loadingChat && /*#__PURE__*/_jsxDEV(Spinner, {\n            ml: \"auto\",\n            d: \"flex\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideDrawer, \"as3TehLvr113LPdGhXcZXGOCckM=\", false, function () {\n  return [useNavigate, useToast, useDisclosure];\n});\n\n_c = SideDrawer;\nexport default SideDrawer;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideDrawer\");","map":{"version":3,"sources":["/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/components/miscellaneous/SideDrawer.js"],"names":["React","useState","useContext","useNavigate","ChatContext","ProfileModal","useDisclosure","Box","Text","Menu","MenuButton","MenuDivider","MenuItem","MenuList","Drawer","DrawerBody","DrawerContent","DrawerHeader","DrawerOverlay","Button","Tooltip","BellIcon","ChevronDownIcon","Avatar","axios","useToast","Input","Spinner","ChatLoading","UserListItem","NotificationBadge","Effect","getSender","SideDrawer","search","setSearch","searchResult","setSearchResult","loading","setLoading","loadingChat","setLoadingChat","user","setSelectedChat","chats","setChats","notification","setNotification","navigate","toast","isOpen","onOpen","onClose","logoutHandler","localStorage","removeItem","handleSearch","title","status","duration","isClosable","position","config","headers","Authorization","token","data","get","error","console","log","message","description","accessChatCreateChat","userId","post","find","chat","_id","background","color","base","md","length","SCALE","map","notif","filter","n","isGroupChat","chatName","users","name","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport ChatContext from \"../../Context/chat-context\";\nimport ProfileModal from \"./ProfileModal\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Button } from \"@chakra-ui/button\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport { Input, Spinner } from \"@chakra-ui/react\";\nimport ChatLoading from \"../ChatLoading\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\n\n\nconst SideDrawer = () => {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const { user, setSelectedChat, chats, setChats, notification, setNotification } = useContext(ChatContext);\n\n  const navigate = useNavigate();\n  const toast = useToast();\n\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInformation\");\n    navigate(\"/\");\n  };\n\n  const handleSearch = async() => {\n\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 3000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: { Authorization: `Bearer ${user.token}`}\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      //console.log(data, 'searchQuerry keyword response data');\n\n      setLoading(false);\n      setSearchResult(data);\n\n    } catch (error) {\n\n      console.log(error.message);\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n\n  \n\n  const accessChatCreateChat = async (userId) => {\n    //console.log(userId); id of selected user\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((chat) => chat._id === data._id)) setChats([data, ...chats]); \n      //already existing check clause //newly created chat above the rest\n\n      setSelectedChat(data);\n\n      console.log(data, 'access new/existing chat response data');\n\n      setLoadingChat(false);\n      onClose(); //drawer close afterwards\n    } catch (error) {\n\n      console.log(error.message);\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 3000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n        borderColor=\"purple.600\"\n        bg=\"yellow.400\"\n        color=\"black\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" bg ='blue.700' onClick={onOpen} color=\"white\"\n            _hover={{ background: \"purple.800\", color:\"yellow.400\" }} _active={{ background: \"purple.800\", color:\"yellow.400\" }}>\n              <i className=\"fas fa-search\"></i>\n              <Text d={{ base: \"none\", md: \"flex\" }} px={4} fontWeight=\"bold\">\n                Search User\n              </Text>\n          </Button>\n        </Tooltip>\n\n        <Text fontSize=\"3xl\" fontFamily=\"Work sans bold\" fontWeight='bold' color=\"purple.700\" >\n          Mishra-Messenger\n        </Text>\n\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} color=\"blue.700\"/>\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"blue.700\"  rightIcon={<ChevronDownIcon/>}  \n              _hover={{background: \"purple.800\", color:\"yellow.400\"}} _active={{background: \"purple.800\", color:\"yellow.400\"}}>\n              <Avatar size=\"sm\" cursor=\"pointer\" name={user.name} borderColor=\"black\" borderWidth=\"2px\" bg=\"yellow.400\" color=\"black\"/>\n            </MenuButton>\n            <MenuList bg = \"purple.600\" borderColor=\"black\" borderWidth=\"2px\">\n              <ProfileModal user={user}>\n                <MenuItem fontWeight=\"bold\" color=\"black\" _hover={{background: \"yellow.400\"}}  >\n                  My Profile\n                </MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider/>\n              <MenuItem fontWeight=\"bold\" color=\"black\" onClick={logoutHandler} _hover={{background: \"yellow.400\"}}>\n                Logout\n              </MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => ( //user clicked on for chat\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChatCreateChat(user._id)}\n                />\n              ))\n            )} \n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </React.Fragment>\n  );\n};\n\nexport default SideDrawer;\n"]},"metadata":{},"sourceType":"module"}
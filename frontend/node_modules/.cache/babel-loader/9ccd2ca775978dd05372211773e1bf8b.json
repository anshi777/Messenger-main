{"ast":null,"code":"export var getSender=function getSender(loggedUser,users){//return console.log('id')\n//1on1 chatName\nreturn users[0]._id===loggedUser._id?users[1].name:users[0].name;};export var getSenderFull=function getSenderFull(loggedUser,users){//eye icon ProfileModal\nreturn users[0]._id===loggedUser._id?users[1]:users[0];};//separating user's and sender's text in chatbox\nexport var isSameSenderMargin=function isSameSenderMargin(messages,m,i,userId){// console.log(i === messages.length - 1);\nif(i<messages.length-1&&messages[i+1].sender._id===m.sender._id&&messages[i].sender._id!==userId)return 33;else if(i<messages.length-1&&messages[i+1].sender._id!==m.sender._id&&messages[i].sender._id!==userId||i===messages.length-1&&messages[i].sender._id!==userId)return 0;else return\"auto\";};//padding between same user's/sender's texts\nexport var isSameUser=function isSameUser(messages,m,i){return i>0&&messages[i-1].sender._id===m.sender._id;};//displaying avatar on sender's last message\nexport var isSameSender=function isSameSender(messages,m,i,userId){return i<messages.length-1&&(messages[i+1].sender._id!==m.sender._id||messages[i+1].sender._id===undefined)&&messages[i].sender._id!==userId;};export var isLastMessage=function isLastMessage(messages,i,userId){return i===messages.length-1&&messages[messages.length-1].sender._id!==userId&&messages[messages.length-1].sender._id;};","map":{"version":3,"sources":["/Users/shikharmishra/Documents/Mishra-Messenger/frontend/src/config/ChatLogics.js"],"names":["getSender","loggedUser","users","_id","name","getSenderFull","isSameSenderMargin","messages","m","i","userId","length","sender","isSameUser","isSameSender","undefined","isLastMessage"],"mappings":"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","sourcesContent":["export const getSender = (loggedUser, users) => {\n  //return console.log('id')\n  //1on1 chatName\n  return users[0]._id === loggedUser._id ? users[1].name : users[0].name;\n};\n\n\nexport const getSenderFull = (loggedUser, users) => {\n  //eye icon ProfileModal\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n\n//separating user's and sender's text in chatbox\nexport const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\n//padding between same user's/sender's texts\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\n//displaying avatar on sender's last message\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\n\n"]},"metadata":{},"sourceType":"module"}